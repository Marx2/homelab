---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 14.3.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  timeout: 20m
  values:
    fullnameOverride: x    
    env:
      TZ: "Europe/Warsaw"
    server:
      resources:
        requests:
          memory: 512Mi
          cpu: 25m
        limits:
          memory: 1000Mi
    prometheusOperator:
      createCustomResource: false
    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    grafana:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: false
    kubelet:
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance

    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "external"
          nginx.ingress.kubernetes.io/auth-url: "https://auth.k.marx.katowice.pl/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: https://auth.k.marx.katowice.pl/oauth2/start
          forecastle.stakater.com/expose: "true"
          forecastle.stakater.com/icon: "https://raw.githubusercontent.com/stakater/ForecastleIcons/master/prometheus.png"
          forecastle.stakater.com/network-restricted: "true"
        hosts:
        - "prometheus.k.marx.katowice.pl"
        tls:
        - hosts:
          - "prometheus.k.marx.katowice.pl"
      prometheusSpec:
        # replicas: 2
        # replicaExternalLabelName: "replica"
        # podAntiAffinity: "hard"
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 672h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: "nfs-client-omv"
              resources:
                requests:
                  storage: 50Gi
