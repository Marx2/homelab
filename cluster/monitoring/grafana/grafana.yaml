---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.6.1
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  values:
    deploymentStrategy:
      type: Recreate
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      VAR_BLOCKY_URL: "http://blocky.kube-system.svc.cluster.local:4000"
    grafana.ini:
      server:
        root_url: "https://grafana.k.marx.katowice.pl"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
        # defaul level is: info
        # level: debug
      grafana_net:
        url: https://grafana.net
      auth.anonymous:
        # sign up anonymous users
        enabled: false
      auth.basic:
        disable_login_form: false
      auth.generic_oauth:
        enabled: true
        #  sign up of new users
        allow_sign_up: true
        # Set the login button name.
        name: Dex
        client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
        client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
        scopes: openid profile email groups
        auth_url: https://dex.k.marx.katowice.pl/auth
        token_url: https://dex.k.marx.katowice.pl/token
        api_url: https://dex.k.marx.katowice.pl/userinfo
      auth.generic_oauth.group_mapping:
        role_attribute_path: "contains(groups[*], 'marx-org:admin') && 'Admin' || 'Viewer'"
        org_id: 1
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-operated:9090
          access: proxy
          isDefault: true
        - name: Loki
          type: loki
          access: proxy
          url: http://loki:3100
    dashboards:
      default:
        cert-manager:
          url: https://gitlab.com/uneeq-oss/cert-manager-mixin/-/raw/master/dashboards/cert-manager.json
          datasource: Prometheus
        sealed-secrets:
          url: https://raw.githubusercontent.com/bitnami-labs/sealed-secrets/master/contrib/prometheus-mixin/dashboards/sealed-secrets-controller.json
          datasource: Prometheus
        speedtest:
          url: https://raw.githubusercontent.com/billimek/prometheus-speedtest-exporter/master/speedtest-exporter.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/overview.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/compact.json
          datasource: Prometheus
        thanos-querier:
          url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/query.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/store.json
          datasource: Prometheus
        thanos-receiver:
          url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/receive.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/sidecar.json
          datasource: Prometheus
        thanos-ruler:
          url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/rule.json
          datasource: Prometheus
        thanos-replicate:
          url: https://raw.githubusercontent.com/thanos-io/thanos/b5431c44a6f40fd8f2aef54747dd1eaf9dfcbd25/examples/dashboards/bucket-replicate.json
          datasource: Prometheus
        nginx-dashboard:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        # blocky:
        #   url: https://raw.githubusercontent.com/0xERR0R/blocky/master/docs/blocky-grafana.json
        #   datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        node-exporter-full:
          url: https://grafana.com/api/dashboards/1860/revisions/22/download
          datasource: Prometheus
        longhorn:
          gnetId: 13032
          revision: 6
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - grafana-piechart-panel
    - vonage-status-panel
    - grafana-worldmap-panel
    - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "external"
        nginx.ingress.kubernetes.io/auth-url: "https://auth.k.marx.katowice.pl/oauth2/auth"
        nginx.ingress.kubernetes.io/auth-signin: https://auth.k.marx.katowice.pl/oauth2/start
        forecastle.stakater.com/expose: "true"
        forecastle.stakater.com/icon: "https://raw.githubusercontent.com/stakater/ForecastleIcons/master/grafana.png"
        forecastle.stakater.com/network-restricted: "true"
      hosts:
      - "grafana.k.marx.katowice.pl"
      tls:
      - hosts:
        - "grafana.k.marx.katowice.pl"
    persistence:
      enabled: true
      storageClassName: "nfs-client-omv"
      size: 10Gi
      accessModes:
      - ReadWriteOnce
    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"
    extraSecretMounts:
      - name: auth-generic-oauth-secret-mount
        secretName: auth-generic-oauth-secret
        defaultMode: 0440
        mountPath: /etc/secrets/auth_generic_oauth
        readOnly: true
    resources:
      limits:
        cpu: 2
        memory: 512Mi
      requests:
        cpu: 1
        memory: 256Mi
  valuesFrom:
  - kind: Secret
    name: "grafana-helm-values"
