---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: dex
  namespace: networking
spec:
  releaseName: dex
  interval: 10m
  chart:
    spec:
      # renovate: registryUrl=https://charts.dexidp.io
      chart: dex
      version: 0.1.3
      sourceRef:
        kind: HelmRepository
        name: dex-charts
        namespace: flux-system
      interval: 10m
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 5
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 10m
    cleanupOnFail: true
    recreate: true
  values:
    image:
      repository: dexidp/dex
      tag: v2.28.1
    env:
      KUBERNETES_POD_NAMESPACE: networking
    config:
      issuer: https://dex.k.marx.katowice.pl

      storage:
        type: kubernetes
        config:
          inCluster: true

      web:
        http: 0.0.0.0:5556

        # If enabled, be sure to configure tls settings above, or use a tool
        # such as let-encrypt to manage the certs.
        # Currently this chart does not support both http and https, and the port
        # is fixed to 5556
        #
        # https: 0.0.0.0:5556
        # tlsCert: /etc/dex/tls/tls.crt
        # tlsKey: /etc/dex/tls/tls.key

      frontend:
        theme: "coreos"
        issuer: "marx"
        issuerUrl: "https://k.marx.katowice.pl"
        logoUrl: http://icons.iconarchive.com/icons/icons-land/metro-halloween/512/Cool-icon.png

      expiry:
        signingKeys: "6h"
        idTokens: "24h"

      logger:
        level: debug
        format: json

      oauth2:
        responseTypes: ["code", "token", "id_token"]
        skipApprovalScreen: true
      # Remember you can have multiple connectors of the same 'type' (with different 'id's)
      # If you need e.g. logins with groups for two different Microsoft 'tenants'
      connectors:
        # GitHub configure 'OAuth Apps' -> 'New OAuth App', add callback URL
        # https://github.com/settings/developers
        - type: github
          id: github
          name: GitHub
          config:
            clientID: ${SECRET_DEX_GITHUB_CLIENT_ID}
            clientSecret: ${SECRET_DEX_GITHUB_CLIENT_SECRET}
            redirectURI: https://dex.k.marx.katowice.pl/callback
            # 'orgs' can be used to map groups from Github
            # https://dexidp.io/docs/connectors/github/
            orgs:
              - name: marx-org
      # The 'name' must match the k8s API server's 'oidc-client-id'
      staticClients:
        - id: oauth2-proxy
          name: 'oauth2-proxy'
          secret: ${SECRET_OAUTH2_PROXY_SECRET}
          redirectURIs:
            - https://auth.k.marx.katowice.pl/oauth2/callback
        - id: grafana
          name: 'grafana'
          secret: '${SECRET_GENERIC_OAUTH_SECRET}'
          redirectURIs:
            - https://grafana.k.marx.katowice.pl/login/generic_oauth
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "nginx"
        kubernetes.io/tls-acme: "true"
        cert-manager.io/cluster-issuer: letsencrypt-production
      hosts:
      - host: dex.k.marx.katowice.pl
        paths:
        - path: /
          pathType: ImplementationSpecific
      tls:
      - secretName: dex-cert
        hosts:
        - dex.k.marx.katowice.pl
    resources:
      requests:
        memory: 250Mi
        cpu: 25m
      limits:
        memory: 250Mi
