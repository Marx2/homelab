---
apiVersion: v1
kind: Secret
metadata:
  name: podsync-config
  namespace: media
stringData:
  config.toml: |-
    [server]
    port = 8080
    hostname = "https://podsync.${SECRET_DOMAIN}"
    # Bind a specific IP addresses for server ,"*": bind all IP addresses which is default option, localhost or 127.0.0.1  bind a single IPv4 address
    # bind_address = "*" 
    # Specify path for reverse proxy and only [A-Za-z0-9]
    # path = "test"
    data_dir = "/app/data" # Don't change if you run podsync via docker

    # Tokens from `Access tokens` section
    [tokens]
    # YouTube API Key. See https://developers.google.com/youtube/registering_an_application
    youtube = "${SECRET_YOUTUBE_TOKEN}"
    #vimeo = [ # Multiple keys will be rotated.
    #  "VIMEO_API_KEY_1", # Vimeo developer keys. See https://developer.vimeo.com/api/guides/start#generate-access-token
    #  "VIMEO_API_KEY_2"
    #]

    [feeds]
      [feeds.BBF1]
      url = "https://www.youtube.com/channel/UCYpD4da-ipib5LDzxw4r26w" # URL address of a channel, group, user, or playlist. 
      page_size = 50 # The number of episodes to query each update (keep in mind, that this might drain API token)
      update_period = "2h" # How often query for updates, examples: "60m", "4h", "2h45m"
      quality = "low" # "high" or "low"
      format = "audio" # "video" or "audio"
      # custom.cover_art_quality use "high" or "low" to special cover image quality from channel cover default is equal with "quality" and disable when custom.cover_art was set.
      # custom = { title = "Level1News", description = "News sections of Level1Techs, in a podcast feed!", author = "Level1Tech", cover_art = "{IMAGE_URL}", cover_art_quality = "high", category = "TV", subcategories = ["Documentary", "Tech News"], explicit = true, lang = "en" } # Optional feed customizations
      # max_height = 720 # Optional maximal height of video, example: 720, 1080, 1440, 2160, ...
      # cron_schedule = "@every 12h" # Optional cron expression format. If set then overwrite 'update_period'. See details below
      # filters = { title = "regex for title here", not_title = "regex for negative title match", description = "...", not_description = "..." } # Optional Golang regexp format. If set, then only download matching episodes.
      opml = true # Optional inclusion of the feed in the OPML file (default value: false)
      # clean = { keep_last = 10 } # Keep last 10 episodes (order desc by PubDate)
      # youtube_dl_args = [ "--write-sub", "--embed-subs", "--sub-lang", "en,en-US,en-GB" ] # Optional extra arguments passed to youtube-dl when downloading videos from this feed. This example would embed available English closed captions in the videos. Note that setting '--audio-format' for audio format feeds, or '--format' or '--output' for any format may cause unexpected behaviour. You should only use this if you know what you are doing, and have read up on youtube-dl's options!
      [feeds.CG]
      url = "https://www.youtube.com/channel/UCFNv1Kwrbo31D-fM-IIYcbw"
      page_size = 10
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.PR]
      url = "https://www.youtube.com/user/donmateo21"
      page_size = 10
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.EP]
      url = "https://www.youtube.com/user/f1talkstv"
      page_size = 10
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.SOK]
      url = "https://www.youtube.com/user/SokolimOkiem"
      page_size = 10
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.BARTEKSZYMA]
      url = "https://www.youtube.com/channel/UCBucv0pGB0lawhM15pCb5vQ"
      page_size = 30
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.SYSTEMTRADER]
      url = "https://www.youtube.com/channel/UC53oqQ6MSo5GUCW5_4AtwOA"
      page_size = 10
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.DORADCATV]
      url = "https://www.youtube.com/channel/UChseY2p3PZTVVg9SrQPRHog"
      page_size = 300
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.PWOJEWODA]
      url = "https://www.youtube.com/channel/UCmh_UrGAvg7bsJddKKaFQCg"
      page_size = 30
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.FINANSOWATV]
      url = "https://www.youtube.com/channel/UCcJq-5bSAMp2ZCOR8kacfmA"
      page_size = 50
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.GIEINWTRAD]
      url = "https://www.youtube.com/channel/UCh9IhKUDYhf0-IyJII0VClg"
      page_size = 30
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.TRADING_FOR_LIVING]
      url = "https://www.youtube.com/channel/UCMh0w6OpVi085p81jK5TnzQ"
      page_size = 30
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.STREFA_INWESTOROW]
      url = "https://www.youtube.com/user/StrefaInwestorow"
      page_size = 100
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.PROCENT]
      url = "https://www.youtube.com/channel/UCcPuUNlUF4DWQ5e0hrE4cug"
      page_size = 300
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.MOJE_IKE]
      url = "https://www.youtube.com/channel/UC6ZuH6K2eblzhSNhLgzAAwA"
      page_size = 300
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.XTB]
      url = "https://www.youtube.com/channel/UCILwajCs145hxNvB4nckALg"
      page_size = 100
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.WOLNY_ARYSTOKRATA]
      url = "https://www.youtube.com/channel/UCn1iWF60wWpCiEAzyaKioDQ"
      page_size = 20
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true
      [feeds.GPWNOTOWANIA]
      url = "https://www.youtube.com/channel/UCAH85XhPoXCxSXUKdwsm0Ig"
      page_size = 20
      update_period = "2h"
      quality = "low"
      format = "audio"
      opml = true


    [database]
      badger = { truncate = true, file_io = true } # See https://github.com/dgraph-io/badger#memory-usage

    [downloader]
    self_update = true # Optional, auto update youtube-dl every 24 hours
    timeout = 15 # Timeout in minutes

    # Optional log config. If not specified logs to the stdout
    #[log]
    #filename = "podsync.log"
    #max_size = 50 # MB
    #max_age = 30 # days
    #max_backups = 7
    #compress = true
