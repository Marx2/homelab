---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: podsync
  namespace: media
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # type of authentication
    # nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    # nginx.ingress.kubernetes.io/auth-secret: podsync-basic-auth
    # message to display with an appropriate context why the authentication is required
    # nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    #forecastle.stakater.com/icon: "https://raw.githubusercontent.com/mxpv/podsync/master/docs/img/logo.png"
    hajimari.io/enable: "true"
    hajimari.io/icon: "podcast"
    hajimari.io/group: "media"
spec:
  rules:
  - host: podsync.${SECRET_DOMAIN}
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: podsync-http
              port:
                number: 80
  tls:
  - hosts:
    - podsync.${SECRET_DOMAIN}
---
kind: Service
apiVersion: v1
metadata:
  name: podsync-http
  namespace: media
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  selector:
    app: podsync
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podsync
  namespace: media
  annotations:
    secret.reloader.stakater.com/reload: "podsync-config"
spec:
  selector:
    matchLabels:
      app: podsync
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: podsync
    spec:
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: config-volume
        secret:
          secretName: podsync-config
      - name: podcasts-omv
        persistentVolumeClaim:
          claimName: nfs-podcasts-omv-pvc
      - name: podsync-db
        persistentVolumeClaim:
          claimName: config-podsync-pvc
      containers:
      - name: podsync
        # image: mxpv/podsync:v2.5
        image: tdeutsch/podsync:v2.5
        args: ["/app/podsync", "--config", "/config/config.toml", "--debug"]
        ports:
        - containerPort: 8080
          name: http-api
        volumeMounts:
        - mountPath: "/etc/localtime"
          readOnly: true
          name: tz-config
        - name: podcasts-omv
          mountPath: "/app/data"
        - name: config-volume
          mountPath: "/config"
        - name: podsync-db
          mountPath: /config/db
        resources:
          requests:
            memory: 128Mi
            cpu: "0.3"
          limits:
            memory: 1024Mi
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
