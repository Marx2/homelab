---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 1h
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        replicas: 1

        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"

        containers:
          main:
            image:
              repository: jellyfin/jellyfin
              tag: 10.10.5
            env:
              TZ: ${TZ}
            resources:
              requests:
                cpu: 100m
                gpu.intel.com/i915: 1
                memory: 512Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 4000Mi

    service:
      main:
        type: LoadBalancer
        loadBalancerIP: 192.168.1.220
        controller: main
        ports:
          http:
            port: 8096
          discovery:
            port: 7359
            protocol: UDP

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          kubernetes.io/ingress.class: nginx

          ### Dex
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
          ###

          #Authelia
          #nginx.ingress.kubernetes.io/auth-url: http://authelia.networking.svc.cluster.local/api/verify
          #nginx.ingress.kubernetes.io/auth-signin: https://aauth.${SECRET_DOMAIN}
          #nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          ###

          #Authentik
          # nginx.ingress.kubernetes.io/auth-url: https://jellyfin.${SECRET_DOMAIN}/akprox/auth?nginx
          # nginx.ingress.kubernetes.io/auth-signin: https://jellyfin.${SECRET_DOMAIN}/akprox/start?rd=$escaped_request_uri
          # nginx.ingress.kubernetes.io/auth-snippet: |
          #   proxy_set_header X-Forwarded-Host $http_host;
          # # see: https://dealancer.medium.com/troubleshooting-kubernetes-ingress-controller-943cb9ff8bf5
          # nginx.ingress.kubernetes.io/proxy-buffer-size: 10k
          ###
          hajimari.io/enable: "true"
          hajimari.io/icon: "disc-player"
          hajimari.io/group: "media"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /cache

      media:
        existingClaim: nfs-media-omv-pvc
        globalMounts:
          - path: /media

      config:
        existingClaim: config-jellyfin-pvc
        globalMounts:
          - path: /config

      transcode:
        type: emptyDir
        medium: "Memory"
        sizeLimit: 2Gi
        globalMounts:
          - path: /config/transcodes
