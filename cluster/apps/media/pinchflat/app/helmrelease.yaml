---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pinchflat
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      pinchflat:
        annotations:
          reloader.stakater.com/auto: "true"
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
          nginx.ingress.kubernetes.io/proxy-body-size: 50m
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          hajimari.io/enable: "true"
          hajimari.io/icon: "disc-player"
          hajimari.io/group: "media"

        containers:
          app:
            image:
              repository: ghcr.io/kieraneglin/pinchflat
              tag: v2025.3.6
            env:
              TZ: ${TZ}
              TZ_DATA_DIR: /tmp/elixir_tz_data
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 256Mi
              limits:
                memory: 4Gi
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
    service:
      app:
        controller: pinchflat
        ports:
          http:
            port: 8945
    ingress:
      app:
        className: nginx
        hosts:
          - host: &host "pinchflat.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      config:
        existingClaim: pinchflat-config-pvc
      tmp:
        type: emptyDir
      yt-dlp:
        type: emptyDir
        globalMounts:
          - path: /etc/yt-dlp
      media:
        existingClaim: nfs-media-pinchflat-pvc
        globalMounts:
          - path: /downloads
            subPath: youtube
