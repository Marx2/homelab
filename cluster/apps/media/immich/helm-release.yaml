---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      enableServiceLinks: false

    controllers:
      immich:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: "16.3"
            env:
              - name: INIT_POSTGRES_DBNAME
                valueFrom:
                  secretKeyRef:
                    name: postgres-media-pguser-immich
                    key: dbname
              - name: INIT_POSTGRES_HOST
                valueFrom:
                  secretKeyRef:
                    name: postgres-media-pguser-immich
                    key: host
              - name: INIT_POSTGRES_USER
                valueFrom:
                  secretKeyRef:
                    name: postgres-media-pguser-immich
                    key: user
              - name: INIT_POSTGRES_PASS
                valueFrom:
                  secretKeyRef:
                    name: postgres-media-pguser-immich
                    key: password
              - name: INIT_POSTGRES_SUPER_PASS
                valueFrom:
                  secretKeyRef:
                    name: postgres-media-pguser-postgres
                    key: password

        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: &tag v1.114.0
            env: &env
              - name: DB_URL_INCOMPLETE
                valueFrom:
                  secretKeyRef:
                    name: postgres-media-pguser-immich
                    key: uri
              - name: DB_URL
                value: $$(DB_URL_INCOMPLETE)?sslmode=require&sslmode=no-verify
            envFrom: &envFrom
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
            resources: &resources
              requests: &requests
                cpu: 100m
                memory: 250Mi
              limits:
                cpu: 2000m
                memory: 2Gi
            securityContext: &securityContext
              fsGroup: 65539
              fsGroupChangePolicy: OnRootMismatch
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
              capabilities:
                drop:
                  - ALL

      #      microservice:
      #        annotations:
      #          reloader.stakater.com/auto: "true"
      #        containers:
      #          app:
      #            image:
      #              repository: ghcr.io/immich-app/immich-server
      #              tag: v1.110.0
      #            envFrom: *envFrom
      #            env: *env
      #            resources: *resources
      #            securityContext: *securityContext

      machine-learning:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: v1.111.0
            envFrom: *envFrom
            env: *env
            resources:
              requests: *requests
              limits:
                memory: 2Gi
            securityContext: *securityContext

      redis:
        containers:
          app:
            image:
              repository: public.ecr.aws/docker/library/redis
              tag: 7.4.0@sha256:7ec631665e5daf2179f70893b742e7eed2e9ce256da2e5fa1088abf8f97754a1

    service:
      immich:
        controller: immich
        ports:
          http:
            port: 3001
      #      microservice:
      #        controller: microservice
      #        ports:
      #          http:
      #            port: 3002
      machine-learning:
        controller: machine-learning
        ports:
          http:
            port: 3003
      redis:
        controller: redis
        ports:
          http:
            port: 6379

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "disc-player"
          hajimari.io/group: "media"
        hosts:
          - host: &host "photos.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: immich
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        existingClaim: nfs-media-images-pvc
        globalMounts:
          - path: /usr/src/app/upload
      obrazki:
        existingClaim: nfs-backup-ro-obrazki-pvc
        #        mode: ReadOnlyMany
        globalMounts:
          - path: /usr/src/app/obrazki
