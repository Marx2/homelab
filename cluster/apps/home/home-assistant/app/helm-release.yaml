---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app hass
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 4.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      hass:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/home-assistant
              tag: 2025.8.2
            env:
              TZ: ${TZ}
              TIMEZONE: ${TZ}
              #HASS_SECRET_ELEVATION: "{{ .HASS_SECRET_ELEVATION }}"
              #HASS_RECORDER_DB_URL: "{{ .HASS_RECORDER_DB_URL }}"
              #HASS_BEARER_TOKEN: "{{ .HASS_BEARER_TOKEN }}"
              #HASS_DARKSKY_API_KEY: "{{ .HASS_DARKSKY_API_KEY }}"
              #HASS_ECOBEE_API_KEY: "{{ .HASS_ECOBEE_API_KEY }}"
              #HASS_ELEVATION: "{{ .HASS_ELEVATION }}"
              #HASS_GOOGLE_PROJECT_ID: "{{ .HASS_GOOGLE_PROJECT_ID }}"
              #HASS_GOOGLE_SECURE_DEVICES_PIN: "{{ .HASS_GOOGLE_SECURE_DEVICES_PIN }}"
              HASS_LATITUDE: "{{ .HASS_LATITUDE }}"
              HASS_LONGITUDE: "{{ .HASS_LONGITUDE }}"
              #HASS_PIRATE_WEATHER_API_KEY: "{{ .HASS_PIRATE_WEATHER_API_KEY }}"
              # Codeserver
              #id_rsa: "{{ .ADMIN_SSH_PRIVATE_KEY }}"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.103.1@sha256:fc1d8a57dc5ca5fab67999416165d994ab78a7338b046c4b29f168033a6b7b38
            args: [
              "--auth", "none",
              "--user-data-dir", "/config/.vscode",
              "--extensions-dir", "/config/.vscode",
              "--port", "12321",
              "/config"
            ]
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8123
          code-server:
            port: 12321
    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "mdi:home-assistant"
          hajimari.io/info: Home Automation
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
      code-server:
        enabled: true
        className: nginx
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "arrow-right-circle-outline"
          hajimari.io/group: "home"
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
        hosts:
          - host: &host2 "code-server.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: code-server
        tls:
          - hosts:
              - *host2
    persistence:
      config:
        existingClaim: home-assistant-config-pvc
        globalMounts:
          - path: /config
      config-cache:
        existingClaim: home-assistant-data-pvc
        globalMounts:
          - path: /config/.venv
      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      config-tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
