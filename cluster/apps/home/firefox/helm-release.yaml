---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name firefox
  namespace: home
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false

  maxHistory: 1

  values:

    controllers:
      firefox:
        enabled: true
        type: deployment
        annotations: { }
        labels: { }
        replicas: 1

        # Controller-specific overrides for `defaultPodOptions` keys
        # pod:
        #   securityContext:
        #     runAsUser: 1000
        #     runAsGroup: 1000
        #     fsGroup: 1000
        #     fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            nameOverride: *name
            image:
              repository: docker.io/jlesage/firefox
              tag: v24.10.1
              pullPolicy: IfNotPresent

            env:
              TZ: ${TZ}
              UMASK: "0022"
              DISPLAY_WIDTH: "1920"
              DISPLAY_HEIGHT: "1080"
              KEEP_APP_RUNNING: "1"
            # resources:
            #   requests:
            #     cpu: 10m **review for update**
            #   limits:
            #     memory: 500Mi **review for update

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5

    service:
      app:
        controller: *name
        ports:
          http:
            port: 5800

    ingress:
      app:
        enabled: true
        className: nginx
        annotations:
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
          hajimari.io/enable: "true"
          hajimari.io/icon: "firefox"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        type: emptyDir
        globalMounts:
          - path: /config

