---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scrutiny
  namespace: home
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
    #forecastle.stakater.com/icon: "https://raw.githubusercontent.com/AnalogJ/scrutiny/master/webapp/frontend/src/assets/images/logo/scrutiny-logo-dark.png"
    hajimari.io/enable: "true"
    hajimari.io/icon: "harddisk"
    hajimari.io/group: "infra"
spec:
  rules:
  - host: scrutiny.${SECRET_DOMAIN}
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: scrutiny-web
              port: 
                number: 80
  tls:
  - hosts:
    - scrutiny.${SECRET_DOMAIN}
---
kind: Service
apiVersion: v1
metadata:
  name: scrutiny-web
  namespace: home
spec:
  selector:
    app: scrutiny
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
    name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scrutiny
  namespace: home
spec:
  selector:
    matchLabels:
      app: scrutiny
  replicas: 1
  template:
    metadata:
      labels:
        app: scrutiny
    spec:
      volumes:
      - name: tz-config
        hostPath:
          path: /etc/localtime
      - name: scrutiny-config
        persistentVolumeClaim:
          claimName: scrutiny-config-pvc
      containers:
      - name: scrutiny
        image: analogj/scrutiny:v0.3.12-web
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 128Mi
        ports:
        - containerPort: 8080
          name: http-api
        volumeMounts:
        - mountPath: "/etc/localtime"
          readOnly: true
          name: tz-config
        - name: scrutiny-config
          mountPath: /scrutiny/config
