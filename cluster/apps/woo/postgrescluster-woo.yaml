---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name postgres-woo
  namespace: woo
spec:
  postgresVersion: 16
  #  image: ghcr.io/chkpwd/cdpgvecto.rs:ubi8-16.2-0-v0.2.0
  shutdown: false
  #  service:
  #    type: LoadBalancer

  patroni: # turn on sync writes to at least 1 other replica
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        max_wal_size: 5GB
        synchronous_commit: "on"
        pg_hba:
          - hostnossl all all 10.42.0.0/16 md5
          - hostssl all all 0.0.0.0/0 md5
  instances:
    - name: postgres-woo
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres
      replicas: &replica 1
      dataVolumeClaimSpec:
        storageClassName: longhorn
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres

  users:
    # Superuser
    - name: postgres
      databases:
        - postgres
      options: "SUPERUSER"
      password:
        type: AlphaNumeric
    # Applications
    - name: woo
      databases:
        - woo
      password:
        type: AlphaNumeric
      options: "SUPERUSER"
  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: crunchy-postgres-secret
      global: &backupFlag
        archive-timeout: "60"
        compress-type: "bz2"
        compress-level: "9"
        delta: "y"
        repo1-retention-full-type: "time"
        repo1-retention-full: "14"
        repo1-retention-diff: "30"
        repo1-path: "/crunchy-woo"
        repo1-s3-uri-style: path
        repo1-storage-verify-tls: "n"
        # repo2-bundle: "y"
        # repo2-block: "y"
        # repo2-path: "/crunchy-pgo"
        # repo2-s3-uri-style: "path"
        # repo2-retention-full-type: "time"
        # repo2-retention-full: "2"
        # repo2-retention-diff: "7"
        # repo2-cipher-type: "aes-256-cbc"
        archive-push-queue-max: 4GiB
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1 # Minio
          s3: &minio
            bucket: "crunchy-postgres"
            endpoint: "minio.k.marx.katowice.pl"
            region: "us-east-1"
          schedules:
            full: "0 1 * * 0" # Sunday at 01:00
            differential: "0 1 * * 1-6" # Mon-Sat at 01:00
            incremental: "0 2-23 * * *" # Every hour except 01:00
  monitoring:
    pgmonitor:
      exporter:
        image: registry.developers.crunchydata.com/crunchydata/crunchy-postgres-exporter:ubi8-5.5.1-0

#    dataSource:
#      pgbackrest:
#        stanza: "db"
#        configuration: *backupConfig
#        global: *backupFlag
#        repo:
#          name: "repo1"
#          s3: *minio

#  proxy:
#    pgBouncer:
#      port: 5432
#      replicas: *replica
#      metadata:
#        labels:
#          app.kubernetes.io/name: crunchy-postgres-pgbouncer
#      config:
#        global:
#          pool_mode: "transaction" # pgBouncer is set to transaction for Authentik. Grafana requires session https://github.com/grafana/grafana/issues/74260#issuecomment-1702795311. Everything else is happy with transaction
#          client_tls_sslmode: prefer
#      topologySpreadConstraints:
#        - maxSkew: 1
#          topologyKey: "kubernetes.io/hostname"
#          whenUnsatisfiable: "DoNotSchedule"
#          labelSelector:
#            matchLabels:
#              postgres-operator.crunchydata.com/cluster: *name
#              postgres-operator.crunchydata.com/role: "pgbouncer"
