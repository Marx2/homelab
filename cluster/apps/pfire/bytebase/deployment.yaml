apiVersion: apps/v1
kind: Deployment
metadata:
  name: bytebase
  namespace: pfire
spec:
  selector:
    matchLabels:
      app: bytebase
  template:
    metadata:
      labels:
        app: bytebase
    spec:
      containers:
        - name: bytebase
          image: bytebase/bytebase:2.10.0@sha256:fda56e88fce49d6512c56a2c21bef094455dafca9f57b508d6aa9d7c717edc9f
          imagePullPolicy: Always
          args:
            [
              "--data",
              "/var/opt/bytebase",
              "--external-url",
              "https://bytebase.${SECRET_DOMAIN}",
              "--port",
              "8080",
              "--pg",
              "postgresql://postgres:${SECRET_POSTGRESQL_PASS}@postgresql:5432/bytebase",
            ]
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: data
              mountPath: /var/opt/bytebase
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 300
            periodSeconds: 300
            timeoutSeconds: 60
      volumes:
        - name: data
          emptyDir: {}
---
kind: Service
apiVersion: v1
metadata:
  name: bytebase
  namespace: pfire
spec:
  selector:
    app: bytebase
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: bytebase
  namespace: pfire
  annotations:
    kubernetes.io/ingress.class: "nginx"
    #nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
    #nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
    #forecastle.stakater.com/icon: "https://raw.githubusercontent.com/AnalogJ/scrutiny/master/webapp/frontend/src/assets/images/logo/scrutiny-logo-dark.png"
    hajimari.io/enable: "true"
    hajimari.io/icon: "harddisk"
    hajimari.io/group: "pfire"
spec:
  rules:
  - host: bytebase.${SECRET_DOMAIN}
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: bytebase
              port:
                number: 8080
  tls:
  - hosts:
    - bytebase.${SECRET_DOMAIN}
