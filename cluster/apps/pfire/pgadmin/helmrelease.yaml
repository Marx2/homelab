---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: pgadmin
  namespace: pfire
spec:
  interval: 15m
  chart:
    spec:
      chart: pgadmin4
      version: 1.35.0
      sourceRef:
        kind: HelmRepository
        name: pgadmin-charts
        namespace: flux-system
  values:
    ## pgAdmin4 container image
    ##
    image:
      registry: docker.io
      repository: dpage/pgadmin4
      # Overrides the image tag whose default is the chart appVersion.
      tag: ""
      pullPolicy: IfNotPresent

    ## Deployment annotations
    annotations: {}

    service:
      type: ClusterIP
      clusterIP: ""
      loadBalancerIP: ""
      port: 80
      targetPort: 80
      # targetPort: 4181 To be used with a proxy extraContainer
      portName: http

    ## Specify the nodePort value for the service types.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:


    ## Server definitions will be loaded at launch time. This allows connection
    ## information to be pre-loaded into the instance of pgAdmin4 in the container.
    ## Ref: https://www.pgadmin.org/docs/pgadmin4/latest/import_export_servers.html
    ##
    serverDefinitions:
      ## If true, server definitions will be created
      ##
      enabled: true

      servers:
        firstServer:
          Name: "postgres-pfire"
          Group: "Servers"
          Port: 5432
          Username: "postgres"
          Host: "postgres-pfire-primary.pfire.svc"
          #SSLMode: "prefer"
          MaintenanceDB: "postgres"
        secondServer:
          Name: "postgres-media"
          Group: "Servers"
          Port: 5432
          Username: "postgres"
          Host: "postgres-media-primary.media.svc"
          #SSLMode: "prefer"
          MaintenanceDB: "postgres"

    ## Ingress
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
    ingress:
      enabled: true
      annotations:
        hajimari.io/enable: "true"
        hajimari.io/icon: "weather-sunset"
        hajimari.io/group: "pfire"
        kubernetes.io/ingress.class: nginx
      hosts:
        - host: pgadmin.${SECRET_DOMAIN}
          paths:
            - path: /
              pathType: Prefix
      tls:
        - hosts:
            - "pgadmin.${SECRET_DOMAIN}"
    persistentVolume:
      ## If true, pgAdmin4 will create/use a Persistent Volume Claim
      ## If false, use emptyDir
      ##
      enabled: true
      size: 2Gi
      storageClass: "longhorn"
    env:
      # can be email or nickname
      email: mnazarko.nospam@gmail.com
      password: ${SECRET_POSTGRESQL_PASS}
      ## If True, allows pgAdmin4 to create session cookies based on IP address
      ## Ref: https://www.pgadmin.org/docs/pgadmin4/latest/config_py.html
      ##
      enhanced_cookie_protection: "True"
