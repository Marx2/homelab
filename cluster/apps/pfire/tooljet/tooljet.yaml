---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tooljet-deployment
  namespace: pfire
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      component: tooljet
  template:
    metadata:
      labels:
        component: tooljet
    spec:
#      imagePullSecrets:
#        - name: docker-secret
      containers:
        - name: container
          image: tooljet/tooljet-ce:v2.0.0
          imagePullPolicy: Always
          args: ["npm", "run", "start:prod"]
          resources:
            limits:
              memory: "2000Mi"
              cpu: "2000m"
            requests:
              memory: "1000Mi"
              cpu: "1000m"
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              port: 3000
              path: /api/health
            successThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 6
          env:
            - name: PG_HOST
              value: postgresql
            - name: PG_USER
              value: postgres
            - name: PG_PASS
              value: ${SECRET_POSTGRESQL_PASS}
#                secretKeyRef:
#                  name: server
#                  key: pg_password
            - name: PG_DB
              value: tooljet
            - name: LOCKBOX_MASTER_KEY
              valueFrom:
                secretKeyRef:
                  name: server
                  key: lockbox_key
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: server
                  key: secret_key_base
            - name: TOOLJET_HOST
              value: "tooljet.${SECRET_DOMAIN}"
            - name: DEPLOYMENT_PLATFORM
              value: "k8s"
            # Set the env values below for Tooljet Database
            # - name: ENABLE_TOOLJET_DB
            #   value: "true"
            # - name: TOOLJET_DB
            #   value: "tooljet_db"
            # - name: TOOLJET_DB_USER
            #   value: "replace_with_tooljet_db_user"
            # - name: TOOLJET_DB_HOST
            #   value: "replace_with_tooljet_db_host"
            # - name: TOOLJET_DB_PASS
            #   value: "replace_with_tooljet_db_pass"
            # - name: PGRST_HOST
            #   value: "replace_with_postgrest_host"
            # - name: PGRST_JWT_SECRET
            #   value: "replace_jwt_secret_here"
---
kind: Service
apiVersion: v1
metadata:
  name: tooljet
  namespace: pfire
spec:
  selector:
    app: tooljet
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
    name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tooljet
  namespace: pfire
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
    #forecastle.stakater.com/icon: "https://raw.githubusercontent.com/AnalogJ/scrutiny/master/webapp/frontend/src/assets/images/logo/scrutiny-logo-dark.png"
    hajimari.io/enable: "true"
    hajimari.io/icon: "harddisk"
    hajimari.io/group: "infra"
spec:
  rules:
  - host: tooljet.${SECRET_DOMAIN}
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:.
              name: tooljet
              port:.
                number: 80
  tls:
  - hosts:
    - tooljet.${SECRET_DOMAIN}