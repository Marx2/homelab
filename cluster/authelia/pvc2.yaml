---
apiVersion: v1
kind: ConfigMap
metadata:
  name: authelia
data:
  configuration.yml: |
    host: 0.0.0.0
    port: 9091
    log_level: info
    default_redirection_url: https://www.example.com
    certificates_directory: /config/certificates
    server:
      read_buffer_size: 4096
      write_buffer_size: 4096
    totp:
      issuer: example.com
    duo_api:
      hostname: {REDACTED}
      integration_key: {REDACTED}
    authentication_backend:
      disable_reset_password: true
    file:
      path: /data/users.yml
      password:
        algorithm: sha512
        iterations: 100000
        salt_length: 16
    session:
      name: authelia_session
      domain: example.com
      expiration: 6h
      inactivity: 5m
      remember_me_duration: 1M
      redis:
        host: redis-master.databases
        port: 6379
        database_index: 5
    regulation:
      max_retries: 3
      find_time: 120
      ban_time: 300
    storage:
      postgres:
        host: postgresql-11.databases
        port: 5432
        database: authelia
        username: authelia
    notifier:
      smtp:
        host: smtp.example.com
        port: 587
        username: authelia
        sender: authelia@example.com
        subject: "[Authelia] {title}"
        startup_check_address: test@authelia.com
        disable_require_tls: false
        disable_html_emails: false
        tls:
          skip_verify: false
          minimum_version: TLS1.2
    access_control:
      default_policy: deny
      rules:
        - domain: '*.example.com'
          policy: bypass
          resources:
            - '^/api.*$'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: authelia
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: authelia
  labels:
    app: authelia
spec:
  selector:
    matchLabels:
      app: authelia
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: authelia
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.example.com/location: home
      securityContext:
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
      containers:
        - name: authelia
          image: authelia/authelia:4.25.2
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "50Mi"
              cpu: "0.25"
            limits:
              memory: "125Mi"
              cpu: "4"
          env:
            - name: TZ
              value: Australia/Melbourne
            - name: AUTHELIA_JWT_SECRET_FILE
              value: /usr/app/secrets/jwt
            - name: AUTHELIA_DUO_API_SECRET_KEY_FILE
              value: /usr/app/secrets/duo_api_key
            - name: AUTHELIA_SESSION_SECRET_FILE
              value: /usr/app/secrets/session
            - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
              value: /usr/app/secrets/user_password
            - name: AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
              value: /usr/app/secrets/user_password
            - name: AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE
              value: /usr/app/secrets/user_password
          ports:
            - name: http
              containerPort: 9091
          startupProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 4
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 30
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - mountPath: /config
              name: config-volume
            - mountPath: /usr/app/secrets
              name: secrets
              readOnly: true
            - mountPath: /config/certificates
              name: certificates
              readOnly: true
            - mountPath: /data
              name: data
          securityContext:
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: authelia
        - name: config-volume
          configMap:
            name: authelia
            items:
              - key: configuration.yml
                path: configuration.yml
        - name: certificates
          secret:
            secretName: authelia-certificates
        - name: secrets
          secret:
            secretName: authelia
            items:
              - key: USER_PASSWORD
                path: user_password
              - key: DUO_API_KEY
                path: duo_api_key
              - key: JWT
                path: jwt
              - key: SESSION
                path: session
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: authelia
data:
  JWT: {REDACTED}
  DUO_API_KEY: {REDACTED}
  SESSION: {REDACTED}
  USER_PASSWORD: {REDACTED}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: authelia-certificates
data:
  Example_Enterprise_Subordinate_Certificate_Authority.pem: {REDACTED}
  Example_Subordinate_Certificate_Authority.pem: {REDACTED}