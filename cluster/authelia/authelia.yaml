apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: authelia
  namespace: authelia
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-global-auth: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: |    
      # https://www.authelia.com/docs/security/measures.html
      add_header Cache-Control "no-store";
      add_header Pragma "no-cache";
      add_header X-Frame-Options "SAMEORIGIN";
      add_header X-XSS-Protection "1; mode=block";
spec:
  rules:
  - host: gate.k.marx.katowice.pl
    http:
      paths:
      - backend:
          serviceName: authelia
          servicePort: 80
        path: /
  tls:
  - hosts:
    - gate.k.marx.katowice.pl
    # secretName: ingress-cert-authelia
---
apiVersion: v1
kind: Service
metadata:
  name: authelia
  namespace: authelia
spec:
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: authelia
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia
  namespace: authelia
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authelia
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: authelia
    spec:
      containers:
      - image: authelia/authelia:4.25.2
        name: authelia
        env:
        ports:
        - containerPort: 80
          name: authelia
        livenessProbe:
          httpGet:
            path: /api/health
            port: 80
        volumeMounts:
        - name: pv-authelia
          mountPath: /config
      volumes:
      - name: pv-authelia
        persistentVolumeClaim:
          claimName: authelia