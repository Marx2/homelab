---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: podsync
  namespace: media
  annotations:
    kubernetes.io/ingress.class: "external"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.k.marx.katowice.pl/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: https://auth.k.marx.katowice.pl/oauth2/start
    forecastle.stakater.com/expose: "true"
    forecastle.stakater.com/icon: "https://raw.githubusercontent.com/mxpv/podsync/master/docs/img/logo.png"
    forecastle.stakater.com/network-restricted: "true"
spec:
  rules:
    - host: podsync.k.marx.katowice.pl
      http:
        paths:
          - backend:
              serviceName: podsync
              servicePort: 8080
            path: /
  tls:
    - hosts:
        - podsync.k.marx.katowice.pl
---
kind: Service
apiVersion: v1
metadata:
  name: podsync-http
  namespace: media
spec:
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: code-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podsync
  namespace: media
spec:
  selector:
    matchLabels:
      app: podsync
  replicas: 1
  template:
    metadata:
      labels:
        app: podsync
    spec:
      volumes:
        - name: tz-config
          hostPath:
            path: /etc/localtime
        - name: config-volume
          secret:
            secretName: podsync-config
        - name: podcasts-omv
          persistentVolumeClaim:
            claimName: nfs-podcasts-omv-pvc
      containers:
        - name: podsync
          image: mxpv/podsync:v2.4
          ports:
            - containerPort: 8080
              name: http-api
          volumeMounts:
            - mountPath: "/etc/localtime"
              readOnly: true
              name: tz-config
            - name: podcasts-omv
              mountPath: "/app/data"
            - name: config-volume
              mountPath: "/var/config"
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - cp /var/config/config.toml /app/data/config.toml
          resources:
            requests:
              memory: 128Mi
              cpu: "0.3"
            limits:
              memory: 512Mi
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
