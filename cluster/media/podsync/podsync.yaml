---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: podsync
  namespace: media
  annotations:
    kubernetes.io/ingress.class: "external"
    # type of authentication
    # nginx.ingress.kubernetes.io/auth-type: basic
    # name of the secret that contains the user/password definitions
    # nginx.ingress.kubernetes.io/auth-secret: podsync-basic-auth
    # message to display with an appropriate context why the authentication is required
    # nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    forecastle.stakater.com/expose: "true"
    forecastle.stakater.com/icon: "https://raw.githubusercontent.com/mxpv/podsync/master/docs/img/logo.png"
    forecastle.stakater.com/network-restricted: "true"
spec:
  rules:
  - host: podsync.k.marx.katowice.pl
    http:
      paths:
      - backend:
          serviceName: podsync-http
          servicePort: 80
        path: /
  tls:
  - hosts:
    - podsync.k.marx.katowice.pl
---
kind: Service
apiVersion: v1
metadata:
  name: podsync-http
  namespace: media
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: podsync
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podsync
  namespace: media
spec:
  selector:
    matchLabels:
      app: podsync
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: podsync
    spec:
      volumes:
        - name: tz-config
          hostPath:
            path: /etc/localtime
        - name: config-volume
          secret:
            secretName: podsync-config
        - name: podcasts-omv
          persistentVolumeClaim:
            claimName: nfs-podcasts-omv-pvc
        - name: podsync-db
          persistentVolumeClaim:
            claimName: config-podsync-pvc
      containers:
        - name: podsync
          # image: tdeutsch/podsync:2.4.0
          image: marx2/podsync:latest
          args: ["/app/podsync", "--config", "/var/config/config.toml"]
          ports:
            - containerPort: 8080
              name: http-api
          volumeMounts:
            - mountPath: "/etc/localtime"
              readOnly: true
              name: tz-config
            - name: podcasts-omv
              mountPath: "/app/data"
            - name: config-volume
              mountPath: "/var/config"
            - name: podsync-db
              mountPath: /var/config/db
          resources:
            requests:
              memory: 128Mi
              cpu: "0.3"
            limits:
              memory: 512Mi
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
