---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: code-server
  namespace: web
  annotations:
    kubernetes.io/ingress.class: "external"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}/oauth2/start
    forecastle.stakater.com/expose: "true"
    forecastle.stakater.com/icon: "https://storage.googleapis.com/stateless-d2c-io/2019/08/e6ca51fc-code-server.png"
    forecastle.stakater.com/network-restricted: "true"
spec:
  rules:
    - host: code-server.${SECRET_DOMAIN}
    http:
      paths:
      - backend:
          serviceName: code-server
          servicePort: 8080
        path: /
  tls:
  - hosts:
      - code-server.${SECRET_DOMAIN}
#    secretName: ingress-cert-code
---
apiVersion: v1
kind: Service
metadata:
  name: code-server
  namespace: web
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: code-server
    # type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: code-server
  namespace: web
spec:
  selector:
    matchLabels:
      app: code-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: code-server
    spec:
      containers:
      - image: codercom/code-server:3.9.2
        name: code-server
        env:
        ports:
        - containerPort: 8080
          name: code-server
        volumeMounts:
        - name: config-code-server
          mountPath: /home/coder
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
      - name: config-code-server
        persistentVolumeClaim:
          claimName: config-code-server-pvc
