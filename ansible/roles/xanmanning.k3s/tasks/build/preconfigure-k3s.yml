---

- name: Ensure k3s control node fact is set
  set_fact:
    k3s_control_node: "{{ 'false' if k3s_build_cluster else 'true' }}"
  when: k3s_control_node is not defined

- name: Ensure k3s master control node fact is set
  set_fact:
    k3s_primary_control_node: "{{ 'false' if k3s_build_cluster else 'true' }}"
  when: k3s_primary_control_node is not defined

- name: Ensure a k3s control node is defined if none are found in play_hosts
  block:
    - name: Set the control host
      set_fact:
        k3s_control_node: true
      when: inventory_hostname == play_hosts[0]
  when: true not in (hostvars | json_query('*.k3s_control_node'))
        and k3s_build_cluster is defined and k3s_build_cluster

- name: Ensure a count of control masters is generated
  set_fact:
    k3s_controller_count: "{{ k3s_controller_count + [ item ] }}"
  when: hostvars[item].k3s_control_node is defined
        and hostvars[item].k3s_control_node
  loop: "{{ play_hosts }}"

- name: Ensure a primary k3s control node is defined if multiple are found in play_hosts
  set_fact:
    k3s_primary_control_node: true
  when: k3s_controller_count is defined
        and k3s_controller_count | length > 1
        and inventory_hostname == k3s_controller_count[0]
        and k3s_build_cluster is defined and k3s_build_cluster

- name: Ensure ansible_host is mapped to inventory_hostname
  lineinfile:
    path: /tmp/inventory.txt
    line: >-
      {{ item }}
      @@@
      {{ hostvars[item].ansible_host | default(hostvars[item].ansible_fqdn) }}
      @@@
      C_{{ hostvars[item].k3s_control_node }}
      @@@
      P_{{ hostvars[item].k3s_primary_control_node | default(False) }}
    create: true
    regexp: "^{{ item }} @@@ {{ hostvars[item].ansible_host | default(hostvars[item].ansible_fqdn) }}"
  loop: "{{ play_hosts }}"
  when: hostvars[item].k3s_control_node is defined

- name: Delegate a master control plane node
  block:
    - name: Lookup control node from file
      command: "grep '{{ 'P_True' if (k3s_controller_count | length > 1) else 'C_True' }}' /tmp/inventory.txt"
      changed_when: false
      register: k3s_control_delegate_raw

    - name: Ensure control node is delegated to for obtaining a token
      set_fact:
        k3s_control_delegate: "{{ k3s_control_delegate_raw.stdout.split(' @@@ ')[0] }}"
      when: k3s_control_delegate is not defined

    - name: Ensure the control node address is registered in Ansible
      set_fact:
        k3s_control_node_address: "{{ hostvars[k3s_control_delegate].ansible_host | default(hostvars[k3s_control_delegate].ansible_fqdn) }}"
      when: k3s_control_node_address is not defined

  when: k3s_control_node_address is not defined
        or k3s_control_delegate is not defined
